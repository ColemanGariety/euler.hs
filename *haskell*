xjjjjYour wish is my IO (). (if I break, run M-x haskell-process-restart; config via M-x customize-mode)
Changed directory: /home/coleman/Git/euler.hs/
λ> 1 + 2 
3

λ> 1 + 2
3

main :: IO ()
main :: IO ()
main :: IO ()
main :: IO ()

<interactive>:1:2-6: error: parse error on input ‘10000’

<interactive>:1:2-6: error: parse error on input ‘10000’

<interactive>:1:2-6: error: parse error on input ‘10000’

<interactive>:1:2-6: error: parse error on input ‘10000’

<interactive>:1:2-6: error: parse error on input ‘10000’
(10000) :: Num t => t
(10000) :: Num t => t
(10000) :: Num t => t
(10000) :: Num t => t
(10000) :: Num t => t
(10000) :: Num t => t
(10000) :: Num t => t

<interactive>:1:2-6: error: parse error on input ‘10000’

<interactive>:1:2-6: error: parse error on input ‘10000’

<interactive>:1:1-19: error: Not in scope: ‘Data.Numbers.Primes’

<interactive>:1:1-19: error: Not in scope: ‘Data.Numbers.Primes’
data () = () 	-- Defined in ‘GHC.Tuple’
instance Bounded () -- Defined in ‘GHC.Enum’
instance Enum () -- Defined in ‘GHC.Enum’
instance Eq () -- Defined in ‘GHC.Classes’
instance Ord () -- Defined in ‘GHC.Classes’
instance Read () -- Defined in ‘GHC.Read’
instance Show () -- Defined in ‘GHC.Show’
instance Monoid () -- Defined in ‘GHC.Base’
data () = () 	-- Defined in ‘GHC.Tuple’
instance Bounded () -- Defined in ‘GHC.Enum’
instance Enum () -- Defined in ‘GHC.Enum’
instance Eq () -- Defined in ‘GHC.Classes’
instance Ord () -- Defined in ‘GHC.Classes’
instance Read () -- Defined in ‘GHC.Read’
instance Show () -- Defined in ‘GHC.Show’
instance Monoid () -- Defined in ‘GHC.Base’
λ> GHCi, version 8.0.1: http://www.haskell.org/ghc/  :? for help
Prelude> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> 1 + 2
3
*Main> :main
104743
*Main> 
*Main> 
*Main> 
*Main> 
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> main
104743
*Main> main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> 
*Main> 
*Main> 
*Main> 
*Main> 
*Main> 
*Main> 
*Main> 
*Main> 1 + 2
3
*Main> 
*Main> 
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> 1 + 2
3
*Main> main
104743
*Main> take 10 primes
[2,3,5,7,11,13,17,19,23,29]
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/007.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/007.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
104743
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
["73167176531330624919225119674426574742355349194934","96983520312774506326239578318016984801869478851843","85861560789112949495459501737958331952853208805511","12540698747158523863050715693290963295227443043557","66896648950445244523161731856403098711121722383113","62229893423380308135336276614282806444486645238749","30358907296290491560440772390713810515859307960866","70172427121883998797908792274921901699720888093776","65727333001053367881220235421809751254540594752243","52584907711670556013604839586446706324415722155397","53697817977846174064955149290862569321978468622482","83972241375657056057490261407972968652414535100474","82166370484403199890008895243450658541227588666881","16427171479924442928230863465674813919123162824586","17866458359124566529476545682848912883142607690042","24219022671055626321111109370544217506941658960408","07198403850962455444362981230987879927244284909188","84580156166097919133875499200524063689912560717606","05886116467109405077541002256983155200055935729725","71636269561882670428252483600823257530420752963450"]
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
["73167176531330624919225119674426574742355349194934","96983520312774506326239578318016984801869478851843","85861560789112949495459501737958331952853208805511","12540698747158523863050715693290963295227443043557","66896648950445244523161731856403098711121722383113","62229893423380308135336276614282806444486645238749","30358907296290491560440772390713810515859307960866","70172427121883998797908792274921901699720888093776","65727333001053367881220235421809751254540594752243","52584907711670556013604839586446706324415722155397","53697817977846174064955149290862569321978468622482","83972241375657056057490261407972968652414535100474","82166370484403199890008895243450658541227588666881","16427171479924442928230863465674813919123162824586","17866458359124566529476545682848912883142607690042","24219022671055626321111109370544217506941658960408","07198403850962455444362981230987879927244284909188","84580156166097919133875499200524063689912560717606","05886116467109405077541002256983155200055935729725","71636269561882670428252483600823257530420752963450"]
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read f :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read f :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

rejjjj/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> read 123

<interactive>:106:6: error:
    • Could not deduce (Num String) arising from the literal ‘123’
      from the context: Read a
        bound by the inferred type of it :: Read a => a
        at <interactive>:106:1-8
    • In the first argument of ‘read’, namely ‘123’
      In the expression: read 123
      In an equation for ‘it’: it = read 123
Prelude> read 123 :: Int

<interactive>:107:6: error:
    • No instance for (Num String) arising from the literal ‘123’
    • In the first argument of ‘read’, namely ‘123’
      In the expression: read 123 :: Int
      In an equation for ‘it’: it = read 123 :: Int
Prelude> read "123" :: Int
123
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘a0 -> IO ()’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘a0 -> IO ()’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘a0 -> IO ()’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘a0 -> IO ()’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘a0 -> IO ()’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print . read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print . read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print . read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read "123" :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read "123" :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:8: error:
    • Couldn't match expected type ‘IO a0’ with actual type ‘Int’
    • In a stmt of a 'do' block: a <- read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
             a <- read "123" :: Int;
             print a }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   a <- read "123" :: Int;
                   print a }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:8: error:
    • Couldn't match expected type ‘IO a0’ with actual type ‘Int’
    • In a stmt of a 'do' block: a <- read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
             a <- read "123" :: Int;
             print a }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   a <- read "123" :: Int;
                   print a }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:8: error:
    • Couldn't match expected type ‘IO a0’ with actual type ‘Int’
    • In a stmt of a 'do' block: a <- read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
             a <- read "123" :: Int;
             print a }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   a <- read "123" :: Int;
                   print a }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:8: error:
    • Couldn't match expected type ‘IO a0’ with actual type ‘Int’
    • In a stmt of a 'do' block: a <- read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
             a <- read "123" :: Int;
             print a }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   a <- read "123" :: Int;
                   print a }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:8: error:
    • Couldn't match expected type ‘IO a0’ with actual type ‘Int’
    • In a stmt of a 'do' block: a <- read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
             a <- read "123" :: Int;
             print a }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   a <- read "123" :: Int;
                   print a }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:8: error:
    • Couldn't match expected type ‘IO a0’ with actual type ‘Int’
    • In a stmt of a 'do' block: a <- read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
             a <- read "123" :: Int;
             print a }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   a <- read "123" :: Int;
                   print a }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:8: error:
    • Couldn't match expected type ‘IO a0’ with actual type ‘Int’
    • In a stmt of a 'do' block: a <- read "123" :: Int
      In the expression:
        do { f <- readFile "008.txt";
             a <- read "123" :: Int;
             print a }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   a <- read "123" :: Int;
                   print a }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • No instance for (Read (IO t0)) arising from a use of ‘read’
    • In a stmt of a 'do' block: read f
      In the expression:
        do { f <- readFile "008.txt";
             read f }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   read f }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • No instance for (Read (IO t0)) arising from a use of ‘read’
    • In a stmt of a 'do' block: read f
      In the expression:
        do { f <- readFile "008.txt";
             read f }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   read f }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • No instance for (Read (IO t0)) arising from a use of ‘read’
    • In a stmt of a 'do' block: read f
      In the expression:
        do { f <- readFile "008.txt";
             read f }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   read f }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • No instance for (Read (IO t0)) arising from a use of ‘read’
    • In a stmt of a 'do' block: read f
      In the expression:
        do { f <- readFile "008.txt";
             read f }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   read f }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: read f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               read f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     read f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: read f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               read f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     read f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: read f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               read f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     read f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: read f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               read f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     read f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"73167176531330624919225119674426574742355349194934\n96983520312774506326239578318016984801869478851843\n85861560789112949495459501737958331952853208805511\n12540698747158523863050715693290963295227443043557\n66896648950445244523161731856403098711121722383113\n62229893423380308135336276614282806444486645238749\n30358907296290491560440772390713810515859307960866\n70172427121883998797908792274921901699720888093776\n65727333001053367881220235421809751254540594752243\n52584907711670556013604839586446706324415722155397\n53697817977846174064955149290862569321978468622482\n83972241375657056057490261407972968652414535100474\n82166370484403199890008895243450658541227588666881\n16427171479924442928230863465674813919123162824586\n17866458359124566529476545682848912883142607690042\n24219022671055626321111109370544217506941658960408\n07198403850962455444362981230987879927244284909188\n84580156166097919133875499200524063689912560717606\n05886116467109405077541002256983155200055935729725\n71636269561882670428252483600823257530420752963450\n"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"73167176531330624919225119674426574742355349194934\n96983520312774506326239578318016984801869478851843\n85861560789112949495459501737958331952853208805511\n12540698747158523863050715693290963295227443043557\n66896648950445244523161731856403098711121722383113\n62229893423380308135336276614282806444486645238749\n30358907296290491560440772390713810515859307960866\n70172427121883998797908792274921901699720888093776\n65727333001053367881220235421809751254540594752243\n52584907711670556013604839586446706324415722155397\n53697817977846174064955149290862569321978468622482\n83972241375657056057490261407972968652414535100474\n82166370484403199890008895243450658541227588666881\n16427171479924442928230863465674813919123162824586\n17866458359124566529476545682848912883142607690042\n24219022671055626321111109370544217506941658960408\n07198403850962455444362981230987879927244284909188\n84580156166097919133875499200524063689912560717606\n05886116467109405077541002256983155200055935729725\n71636269561882670428252483600823257530420752963450\n"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
["73167176531330624919225119674426574742355349194934","96983520312774506326239578318016984801869478851843","85861560789112949495459501737958331952853208805511","12540698747158523863050715693290963295227443043557","66896648950445244523161731856403098711121722383113","62229893423380308135336276614282806444486645238749","30358907296290491560440772390713810515859307960866","70172427121883998797908792274921901699720888093776","65727333001053367881220235421809751254540594752243","52584907711670556013604839586446706324415722155397","53697817977846174064955149290862569321978468622482","83972241375657056057490261407972968652414535100474","82166370484403199890008895243450658541227588666881","16427171479924442928230863465674813919123162824586","17866458359124566529476545682848912883142607690042","24219022671055626321111109370544217506941658960408","07198403850962455444362981230987879927244284909188","84580156166097919133875499200524063689912560717606","05886116467109405077541002256983155200055935729725","71636269561882670428252483600823257530420752963450"]
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
["73167176531330624919225119674426574742355349194934","96983520312774506326239578318016984801869478851843","85861560789112949495459501737958331952853208805511","12540698747158523863050715693290963295227443043557","66896648950445244523161731856403098711121722383113","62229893423380308135336276614282806444486645238749","30358907296290491560440772390713810515859307960866","70172427121883998797908792274921901699720888093776","65727333001053367881220235421809751254540594752243","52584907711670556013604839586446706324415722155397","53697817977846174064955149290862569321978468622482","83972241375657056057490261407972968652414535100474","82166370484403199890008895243450658541227588666881","16427171479924442928230863465674813919123162824586","17866458359124566529476545682848912883142607690042","24219022671055626321111109370544217506941658960408","07198403850962455444362981230987879927244284909188","84580156166097919133875499200524063689912560717606","05886116467109405077541002256983155200055935729725","71636269561882670428252483600823257530420752963450"]
*Main> join ["1", "2", "3"]

<interactive>:153:1: error:
    Variable not in scope: join :: [[Char]] -> t
*Main> concat ["1"]
"1"
*Main> concat ["1", "2", "3"]
"123"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:20: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines f’
      In the second argument of ‘($)’, namely ‘concat . lines f’
      In a stmt of a 'do' block: print $ concat . lines f
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:20: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines f’
      In the second argument of ‘($)’, namely ‘concat . lines f’
      In a stmt of a 'do' block: print $ concat . lines f
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:11: error:
    • Couldn't match expected type ‘String -> a0’
                  with actual type ‘[String]’
    • The function ‘concat’ is applied to two arguments,
      but its type ‘(String -> [String]) -> [String]’ has only one
      In the second argument of ‘($)’, namely ‘concat lines f’
      In a stmt of a 'do' block: print $ concat lines f
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:11: error:
    • Couldn't match expected type ‘String -> a0’
                  with actual type ‘[String]’
    • The function ‘concat’ is applied to two arguments,
      but its type ‘(String -> [String]) -> [String]’ has only one
      In the second argument of ‘($)’, namely ‘concat lines f’
      In a stmt of a 'do' block: print $ concat lines f
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Ambiguous type variable ‘a0’ arising from a use of ‘print’
      prevents the constraint ‘(Show a0)’ from being solved.
      Probable fix: use a type annotation to specify what ‘a0’ should be.
      These potential instances exist:
        instance (Show a, Show b) => Show (Either a b)
          -- Defined in ‘Data.Either’
        instance Show Ordering -- Defined in ‘GHC.Show’
        instance Show Integer -- Defined in ‘GHC.Show’
        ...plus 23 others
        ...plus 47 instances involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    • In a stmt of a 'do' block: print $ read $ concat $ lines f
      In the expression:
        do { f <- readFile "008.txt";
             print $ read $ concat $ lines f }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                   print $ read $ concat $ lines f }

/home/coleman/Git/euler.hs/008.hs:3:11: error:
    • Ambiguous type variable ‘a0’ arising from a use of ‘read’
      prevents the constraint ‘(Read a0)’ from being solved.
      Probable fix: use a type annotation to specify what ‘a0’ should be.
      These potential instances exist:
        instance (Read a, Read b) => Read (Either a b)
          -- Defined in ‘Data.Either’
        instance Read Ordering -- Defined in ‘GHC.Read’
        instance Read Integer -- Defined in ‘GHC.Read’
        ...plus 23 others
        ...plus 30 instances involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    • In the second argument of ‘($)’, namely ‘read $ concat $ lines f’
      In a stmt of a 'do' block: print $ read $ concat $ lines f
      In the expression:
        do { f <- readFile "008.txt";
             print $ read $ concat $ lines f }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read $ concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read $ concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read $ concat $ lines f :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read $ concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read $ concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read $ concat $ lines f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read $ concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read $ concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read $ concat $ lines f :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read $ concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read $ concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read $ concat $ lines f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read $ concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read $ concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read $ concat $ lines f :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read $ concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read $ concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read $ concat $ lines f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

jjjjjjjjjjj/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Int’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print $ read $ concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read $ concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read $ concat $ lines f :: Int }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: print $ read $ concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               print $ read $ concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     print $ read $ concat $ lines f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> read $ "1235"
*** Exception: Prelude.read: no parse
Prelude> 
Prelude> 
Prelude> 
Prelude> read "12345" :: Int
12345
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • No instance for (Read (IO t0)) arising from a use of ‘read’
    • In the first argument of ‘(.)’, namely ‘read’
      In the expression: read . concat
      In a stmt of a 'do' block: read . concat $ lines f
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • No instance for (Read (IO t0)) arising from a use of ‘read’
    • In the first argument of ‘(.)’, namely ‘read’
      In the expression: read . concat
      In a stmt of a 'do' block: read . concat $ lines f
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • No instance for (Read (IO t0)) arising from a use of ‘read’
    • In the first argument of ‘(.)’, namely ‘read’
      In the expression: read . concat
      In a stmt of a 'do' block: read . concat $ lines f
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: read . concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               read . concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     read . concat $ lines f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: read . concat $ lines f :: Int
      In the expression:
        do { f <- readFile "008.txt";
               read . concat $ lines f :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     read . concat $ lines f :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: read (concat $ lines f) :: Int
      In the expression:
        do { f <- readFile "008.txt";
               read (concat $ lines f) :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     read (concat $ lines f) :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Int’
    • In a stmt of a 'do' block: read (concat $ lines f) :: Int
      In the expression:
        do { f <- readFile "008.txt";
               read (concat $ lines f) :: Int }
      In an equation for ‘main’:
          main
            = do { f <- readFile "008.txt";
                     read (concat $ lines f) :: Int }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
-1075197471424882822
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
-1075197471424882822
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
-1075197471424882822
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
-1075197471424882822
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:36: error:
    parse error on input ‘::’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:36: error:
    parse error on input ‘::’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:37: error:
    parse error on input ‘)’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:37: error:
    parse error on input ‘)’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:37: error:
    parse error on input ‘)’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:37: error:
    parse error on input ‘)’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:8: error:
    • Couldn't match expected type ‘[Char] -> m (t0 [a1])’
                  with actual type ‘[String]’
    • The function ‘lines’ is applied to two arguments,
      but its type ‘String -> [String]’ has only one
      In a stmt of a 'do' block: s <- lines readFile "008.txt"
      In the expression:
        do { s <- lines readFile "008.txt";
               print (read . concat s) :: Integer }
    • Relevant bindings include
        main :: m b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)

/home/coleman/Git/euler.hs/008.hs:2:14: error:
    • Couldn't match type ‘FilePath -> IO String’ with ‘[Char]’
      Expected type: String
        Actual type: FilePath -> IO String
    • Probable cause: ‘readFile’ is applied to too few arguments
      In the first argument of ‘lines’, namely ‘readFile’
      In a stmt of a 'do' block: s <- lines readFile "008.txt"
      In the expression:
        do { s <- lines readFile "008.txt";
               print (read . concat s) :: Integer }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Integer’ with actual type ‘IO ()’
    • In a stmt of a 'do' block: print (read . concat s) :: Integer
      In the expression:
        do { s <- lines readFile "008.txt";
               print (read . concat s) :: Integer }
      In an equation for ‘main’:
          main
            = do { s <- lines readFile "008.txt";
                     print (read . concat s) :: Integer }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘m b’ with actual type ‘Integer’
    • In a stmt of a 'do' block: print (read . concat s) :: Integer
      In the expression:
        do { s <- lines readFile "008.txt";
               print (read . concat s) :: Integer }
      In an equation for ‘main’:
          main
            = do { s <- lines readFile "008.txt";
                     print (read . concat s) :: Integer }
    • Relevant bindings include
        main :: m b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)

/home/coleman/Git/euler.hs/008.hs:3:17: error:
    • Couldn't match expected type ‘a0 -> String’
                  with actual type ‘[a1]’
    • Possible cause: ‘concat’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘concat s’
      In the first argument of ‘print’, namely ‘(read . concat s)’
      In a stmt of a 'do' block: print (read . concat s) :: Integer
    • Relevant bindings include
        s :: t0 [a1] (bound at /home/coleman/Git/euler.hs/008.hs:2:3)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:8: error:
    • Couldn't match expected type ‘[Char] -> IO (t0 [Char])’
                  with actual type ‘[String]’
    • The function ‘lines’ is applied to two arguments,
      but its type ‘String -> [String]’ has only one
      In a stmt of a 'do' block: s <- lines readFile "008.txt"
      In the expression:
        do { s <- lines readFile "008.txt";
             print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:2:14: error:
    • Couldn't match type ‘FilePath -> IO String’ with ‘[Char]’
      Expected type: String
        Actual type: FilePath -> IO String
    • Probable cause: ‘readFile’ is applied to too few arguments
      In the first argument of ‘lines’, namely ‘readFile’
      In a stmt of a 'do' block: s <- lines readFile "008.txt"
      In the expression:
        do { s <- lines readFile "008.txt";
             print (read (concat s) :: Integer) }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:8: error:
    • Couldn't match expected type ‘[Char] -> IO (t0 [Char])’
                  with actual type ‘[String]’
    • The function ‘lines’ is applied to two arguments,
      but its type ‘String -> [String]’ has only one
      In a stmt of a 'do' block: s <- lines readFile "008.txt"
      In the expression:
        do { s <- lines readFile "008.txt";
             print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:2:14: error:
    • Couldn't match type ‘FilePath -> IO String’ with ‘[Char]’
      Expected type: String
        Actual type: FilePath -> IO String
    • Probable cause: ‘readFile’ is applied to too few arguments
      In the first argument of ‘lines’, namely ‘readFile’
      In a stmt of a 'do' block: s <- lines readFile "008.txt"
      In the expression:
        do { s <- lines readFile "008.txt";
             print (read (concat s) :: Integer) }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:8: error:
    • Couldn't match expected type ‘[Char] -> IO (t0 [Char])’
                  with actual type ‘[String]’
    • The function ‘lines’ is applied to two arguments,
      but its type ‘String -> [String]’ has only one
      In a stmt of a 'do' block: s <- lines readFile "008.txt"
      In the expression:
        do { s <- lines readFile "008.txt";
             print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:2:14: error:
    • Couldn't match type ‘FilePath -> IO String’ with ‘[Char]’
      Expected type: String
        Actual type: FilePath -> IO String
    • Probable cause: ‘readFile’ is applied to too few arguments
      In the first argument of ‘lines’, namely ‘readFile’
      In a stmt of a 'do' block: s <- lines readFile "008.txt"
      In the expression:
        do { s <- lines readFile "008.txt";
             print (read (concat s) :: Integer) }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:8: error:
    • Couldn't match expected type ‘IO (t0 [Char])’
                  with actual type ‘a0 -> [String]’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: s <- lines . readFile "008.txt"
      In the expression:
        do { s <- lines . readFile "008.txt";
             print (read (concat s) :: Integer) }
      In an equation for ‘main’:
          main
            = do { s <- lines . readFile "008.txt";
                   print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:2:16: error:
    • Couldn't match expected type ‘a0 -> String’
                  with actual type ‘IO String’
    • Possible cause: ‘readFile’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘readFile "008.txt"’
      In a stmt of a 'do' block: s <- lines . readFile "008.txt"
      In the expression:
        do { s <- lines . readFile "008.txt";
             print (read (concat s) :: Integer) }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:8: error:
    • Couldn't match expected type ‘IO (t0 [Char])’
                  with actual type ‘a0 -> [String]’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: s <- lines . readFile "008.txt"
      In the expression:
        do { s <- lines . readFile "008.txt";
             print (read (concat s) :: Integer) }
      In an equation for ‘main’:
          main
            = do { s <- lines . readFile "008.txt";
                   print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:2:16: error:
    • Couldn't match expected type ‘a0 -> String’
                  with actual type ‘IO String’
    • Possible cause: ‘readFile’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘readFile "008.txt"’
      In a stmt of a 'do' block: s <- lines . readFile "008.txt"
      In the expression:
        do { s <- lines . readFile "008.txt";
             print (read (concat s) :: Integer) }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:8: error:
    • Couldn't match expected type ‘IO (t0 [Char])’
                  with actual type ‘a0 -> [String]’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: s <- lines . readFile "008.txt"
      In the expression:
        do { s <- lines . readFile "008.txt";
             print (read (concat s) :: Integer) }
      In an equation for ‘main’:
          main
            = do { s <- lines . readFile "008.txt";
                   print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:2:16: error:
    • Couldn't match expected type ‘a0 -> String’
                  with actual type ‘IO String’
    • Possible cause: ‘readFile’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘readFile "008.txt"’
      In a stmt of a 'do' block: s <- lines . readFile "008.txt"
      In the expression:
        do { s <- lines . readFile "008.txt";
             print (read (concat s) :: Integer) }
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:1:1: error:
    • Couldn't match expected type ‘IO t0’ with actual type ‘[()]’
    • In the expression: main
      When checking the type of the IO action ‘main’

/home/coleman/Git/euler.hs/008.hs:2:16: error:
    • Couldn't match type ‘IO String’ with ‘[Char]’
      Expected type: String
        Actual type: IO String
    • In the second argument of ‘($)’, namely ‘readFile "008.txt"’
      In a stmt of a 'do' block: s <- lines $ readFile "008.txt"
      In the expression:
        do { s <- lines $ readFile "008.txt";
             print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match type ‘IO’ with ‘[]’
      Expected type: [()]
        Actual type: IO ()
    • In a stmt of a 'do' block: print (read (concat s) :: Integer)
      In the expression:
        do { s <- lines $ readFile "008.txt";
             print (read (concat s) :: Integer) }
      In an equation for ‘main’:
          main
            = do { s <- lines $ readFile "008.txt";
                   print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:3:23: error:
    • Couldn't match type ‘Char’ with ‘[Char]’
      Expected type: [[Char]]
        Actual type: String
    • In the first argument of ‘concat’, namely ‘s’
      In the first argument of ‘read’, namely ‘(concat s)’
      In the first argument of ‘print’, namely
        ‘(read (concat s) :: Integer)’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:1:1: error:
    • Couldn't match expected type ‘IO t0’ with actual type ‘[()]’
    • In the expression: main
      When checking the type of the IO action ‘main’

/home/coleman/Git/euler.hs/008.hs:2:16: error:
    • Couldn't match type ‘IO String’ with ‘[Char]’
      Expected type: String
        Actual type: IO String
    • In the second argument of ‘($)’, namely ‘readFile "008.txt"’
      In a stmt of a 'do' block: s <- lines $ readFile "008.txt"
      In the expression:
        do { s <- lines $ readFile "008.txt";
             print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match type ‘IO’ with ‘[]’
      Expected type: [()]
        Actual type: IO ()
    • In a stmt of a 'do' block: print (read (concat s) :: Integer)
      In the expression:
        do { s <- lines $ readFile "008.txt";
             print (read (concat s) :: Integer) }
      In an equation for ‘main’:
          main
            = do { s <- lines $ readFile "008.txt";
                   print (read (concat s) :: Integer) }

/home/coleman/Git/euler.hs/008.hs:3:23: error:
    • Couldn't match type ‘Char’ with ‘[Char]’
      Expected type: [[Char]]
        Actual type: String
    • In the first argument of ‘concat’, namely ‘s’
      In the first argument of ‘read’, namely ‘(concat s)’
      In the first argument of ‘print’, namely
        ‘(read (concat s) :: Integer)’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:19: error:
    • Couldn't match type ‘IO String’ with ‘[Char]’
      Expected type: String
        Actual type: IO String
    • In the second argument of ‘($)’, namely ‘readFile "008.txt"’
      In the expression: lines $ readFile "008.txt"
      In an equation for ‘s’: s = lines $ readFile "008.txt"
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:19: error:
    • Couldn't match type ‘IO String’ with ‘[Char]’
      Expected type: String
        Actual type: IO String
    • In the second argument of ‘($)’, namely ‘readFile "008.txt"’
      In the expression: lines $ readFile "008.txt"
      In an equation for ‘s’: s = lines $ readFile "008.txt"
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:19: error:
    • Couldn't match expected type ‘a -> String’
                  with actual type ‘IO String’
    • Possible cause: ‘readFile’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘readFile "008.txt"’
      In the expression: lines . readFile "008.txt"
      In an equation for ‘s’: s = lines . readFile "008.txt"
    • Relevant bindings include
        s :: a -> [String] (bound at /home/coleman/Git/euler.hs/008.hs:2:7)

/home/coleman/Git/euler.hs/008.hs:3:23: error:
    • Couldn't match type ‘[Char]’ with ‘Char’
      Expected type: a0 -> [Char]
        Actual type: a0 -> [String]
    • In the first argument of ‘concat’, namely ‘s’
      In the first argument of ‘read’, namely ‘(concat s)’
      In the first argument of ‘print’, namely
        ‘(read (concat s) :: Integer)’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:19: error:
    • Couldn't match expected type ‘a -> String’
                  with actual type ‘IO String’
    • Possible cause: ‘readFile’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘readFile "008.txt"’
      In the expression: lines . readFile "008.txt"
      In an equation for ‘s’: s = lines . readFile "008.txt"
    • Relevant bindings include
        s :: a -> [String] (bound at /home/coleman/Git/euler.hs/008.hs:2:7)

/home/coleman/Git/euler.hs/008.hs:3:23: error:
    • Couldn't match type ‘[Char]’ with ‘Char’
      Expected type: a0 -> [Char]
        Actual type: a0 -> [String]
    • In the first argument of ‘concat’, namely ‘s’
      In the first argument of ‘read’, namely ‘(concat s)’
      In the first argument of ‘print’, namely
        ‘(read (concat s) :: Integer)’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:11: error:
    • Couldn't match expected type ‘[Char] -> t’
                  with actual type ‘[String]’
    • The function ‘lines’ is applied to two arguments,
      but its type ‘String -> [String]’ has only one
      In the expression: lines readFile "008.txt"
      In an equation for ‘s’: s = lines readFile "008.txt"
    • Relevant bindings include
        s :: t (bound at /home/coleman/Git/euler.hs/008.hs:2:7)

/home/coleman/Git/euler.hs/008.hs:2:17: error:
    • Couldn't match type ‘FilePath -> IO String’ with ‘[Char]’
      Expected type: String
        Actual type: FilePath -> IO String
    • Probable cause: ‘readFile’ is applied to too few arguments
      In the first argument of ‘lines’, namely ‘readFile’
      In the expression: lines readFile "008.txt"
      In an equation for ‘s’: s = lines readFile "008.txt"
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:11: error:
    • Couldn't match expected type ‘[Char] -> t’
                  with actual type ‘[String]’
    • The function ‘lines’ is applied to two arguments,
      but its type ‘String -> [String]’ has only one
      In the expression: lines readFile "008.txt"
      In an equation for ‘s’: s = lines readFile "008.txt"
    • Relevant bindings include
        s :: t (bound at /home/coleman/Git/euler.hs/008.hs:2:7)

/home/coleman/Git/euler.hs/008.hs:2:17: error:
    • Couldn't match type ‘FilePath -> IO String’ with ‘[Char]’
      Expected type: String
        Actual type: FilePath -> IO String
    • Probable cause: ‘readFile’ is applied to too few arguments
      In the first argument of ‘lines’, namely ‘readFile’
      In the expression: lines readFile "008.txt"
      In an equation for ‘s’: s = lines readFile "008.txt"
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:2:11: error:
    • Couldn't match expected type ‘[Char] -> t’
                  with actual type ‘[String]’
    • The function ‘lines’ is applied to two arguments,
      but its type ‘String -> [String]’ has only one
      In the expression: lines readFile "008.txt"
      In an equation for ‘s’: s = lines readFile "008.txt"
    • Relevant bindings include
        s :: t (bound at /home/coleman/Git/euler.hs/008.hs:2:7)

/home/coleman/Git/euler.hs/008.hs:2:17: error:
    • Couldn't match type ‘FilePath -> IO String’ with ‘[Char]’
      Expected type: String
        Actual type: FilePath -> IO String
    • Probable cause: ‘readFile’ is applied to too few arguments
      In the first argument of ‘lines’, namely ‘readFile’
      In the expression: lines readFile "008.txt"
      In an equation for ‘s’: s = lines readFile "008.txt"
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    parse error on input ‘in’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    parse error on input ‘in’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    parse error on input ‘in’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    parse error on input ‘in’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    parse error on input ‘in’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    parse error on input ‘in’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    parse error on input ‘in’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"73167176531330624919225119674426574742355349194934\n96983520312774506326239578318016984801869478851843\n85861560789112949495459501737958331952853208805511\n12540698747158523863050715693290963295227443043557\n66896648950445244523161731856403098711121722383113\n62229893423380308135336276614282806444486645238749\n30358907296290491560440772390713810515859307960866\n70172427121883998797908792274921901699720888093776\n65727333001053367881220235421809751254540594752243\n52584907711670556013604839586446706324415722155397\n53697817977846174064955149290862569321978468622482\n83972241375657056057490261407972968652414535100474\n82166370484403199890008895243450658541227588666881\n16427171479924442928230863465674813919123162824586\n17866458359124566529476545682848912883142607690042\n24219022671055626321111109370544217506941658960408\n07198403850962455444362981230987879927244284909188\n84580156166097919133875499200524063689912560717606\n05886116467109405077541002256983155200055935729725\n71636269561882670428252483600823257530420752963450\n"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"73167176531330624919225119674426574742355349194934\n96983520312774506326239578318016984801869478851843\n85861560789112949495459501737958331952853208805511\n12540698747158523863050715693290963295227443043557\n66896648950445244523161731856403098711121722383113\n62229893423380308135336276614282806444486645238749\n30358907296290491560440772390713810515859307960866\n70172427121883998797908792274921901699720888093776\n65727333001053367881220235421809751254540594752243\n52584907711670556013604839586446706324415722155397\n53697817977846174064955149290862569321978468622482\n83972241375657056057490261407972968652414535100474\n82166370484403199890008895243450658541227588666881\n16427171479924442928230863465674813919123162824586\n17866458359124566529476545682848912883142607690042\n24219022671055626321111109370544217506941658960408\n07198403850962455444362981230987879927244284909188\n84580156166097919133875499200524063689912560717606\n05886116467109405077541002256983155200055935729725\n71636269561882670428252483600823257530420752963450\n"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"73167176531330624919225119674426574742355349194934\n96983520312774506326239578318016984801869478851843\n85861560789112949495459501737958331952853208805511\n12540698747158523863050715693290963295227443043557\n66896648950445244523161731856403098711121722383113\n62229893423380308135336276614282806444486645238749\n30358907296290491560440772390713810515859307960866\n70172427121883998797908792274921901699720888093776\n65727333001053367881220235421809751254540594752243\n52584907711670556013604839586446706324415722155397\n53697817977846174064955149290862569321978468622482\n83972241375657056057490261407972968652414535100474\n82166370484403199890008895243450658541227588666881\n16427171479924442928230863465674813919123162824586\n17866458359124566529476545682848912883142607690042\n24219022671055626321111109370544217506941658960408\n07198403850962455444362981230987879927244284909188\n84580156166097919133875499200524063689912560717606\n05886116467109405077541002256983155200055935729725\n71636269561882670428252483600823257530420752963450\n"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
["73167176531330624919225119674426574742355349194934","96983520312774506326239578318016984801869478851843","85861560789112949495459501737958331952853208805511","12540698747158523863050715693290963295227443043557","66896648950445244523161731856403098711121722383113","62229893423380308135336276614282806444486645238749","30358907296290491560440772390713810515859307960866","70172427121883998797908792274921901699720888093776","65727333001053367881220235421809751254540594752243","52584907711670556013604839586446706324415722155397","53697817977846174064955149290862569321978468622482","83972241375657056057490261407972968652414535100474","82166370484403199890008895243450658541227588666881","16427171479924442928230863465674813919123162824586","17866458359124566529476545682848912883142607690042","24219022671055626321111109370544217506941658960408","07198403850962455444362981230987879927244284909188","84580156166097919133875499200524063689912560717606","05886116467109405077541002256983155200055935729725","71636269561882670428252483600823257530420752963450"]
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:20: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines s’
      In the second argument of ‘($)’, namely ‘concat . lines s’
      In a stmt of a 'do' block: print $ concat . lines s
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:20: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines s’
      In the second argument of ‘($)’, namely ‘concat . lines s’
      In a stmt of a 'do' block: print $ concat . lines s
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:20: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines s’
      In the second argument of ‘($)’, namely ‘concat . lines s’
      In a stmt of a 'do' block: print $ concat . lines s
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’
                  with actual type ‘a0 -> IO ()’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: print . concat . lines s
      In the expression:
        do { s <- readFile "008.txt";
             print . concat . lines s }
      In an equation for ‘main’:
          main
            = do { s <- readFile "008.txt";
                   print . concat . lines s }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)

/home/coleman/Git/euler.hs/008.hs:3:20: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines s’
      In the second argument of ‘(.)’, namely ‘concat . lines s’
      In a stmt of a 'do' block: print . concat . lines s
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’
                  with actual type ‘a0 -> IO ()’
    • Probable cause: ‘(.)’ is applied to too few arguments
      In a stmt of a 'do' block: print . concat . lines s
      In the expression:
        do { s <- readFile "008.txt";
             print . concat . lines s }
      In an equation for ‘main’:
          main
            = do { s <- readFile "008.txt";
                   print . concat . lines s }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)

/home/coleman/Git/euler.hs/008.hs:3:20: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines s’
      In the second argument of ‘(.)’, namely ‘concat . lines s’
      In a stmt of a 'do' block: print . concat . lines s
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> s

<interactive>:247:1: error: Variable not in scope: s
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:37: error:
    parse error on input ‘::’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:37: error:
    parse error on input ‘::’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:37: error:
    parse error on input ‘::’
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Integer’ with actual type ‘IO ()’
    • In a stmt of a 'do' block:
          print $ read (concat $ lines s) :: Integer
      In the expression:
        do { s <- readFile "008.txt";
               print $ read (concat $ lines s) :: Integer }
      In an equation for ‘main’:
          main
            = do { s <- readFile "008.txt";
                     print $ read (concat $ lines s) :: Integer }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Integer’
    • In a stmt of a 'do' block:
          print $ read (concat $ lines s) :: Integer
      In the expression:
        do { s <- readFile "008.txt";
               print $ read (concat $ lines s) :: Integer }
      In an equation for ‘main’:
          main
            = do { s <- readFile "008.txt";
                     print $ read (concat $ lines s) :: Integer }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘Integer’ with actual type ‘IO ()’
    • In a stmt of a 'do' block:
          print $ read (concat $ lines s) :: Integer
      In the expression:
        do { s <- readFile "008.txt";
               print $ read (concat $ lines s) :: Integer }
      In an equation for ‘main’:
          main
            = do { s <- readFile "008.txt";
                     print $ read (concat $ lines s) :: Integer }

/home/coleman/Git/euler.hs/008.hs:3:3: error:
    • Couldn't match expected type ‘IO b’ with actual type ‘Integer’
    • In a stmt of a 'do' block:
          print $ read (concat $ lines s) :: Integer
      In the expression:
        do { s <- readFile "008.txt";
               print $ read (concat $ lines s) :: Integer }
      In an equation for ‘main’:
          main
            = do { s <- readFile "008.txt";
                     print $ read (concat $ lines s) :: Integer }
    • Relevant bindings include
        main :: IO b (bound at /home/coleman/Git/euler.hs/008.hs:1:1)
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main
7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> 1 + 1
2
*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:18: error:
    • Couldn't match type ‘a0 -> [a1]’ with ‘[Char]’
      Expected type: String
        Actual type: a0 -> [a1]
    • Probable cause: ‘(.)’ is applied to too few arguments
      In the second argument of ‘($)’, namely ‘concat . lines s’
      In the expression: read $ concat . lines s :: Integer
      In an equation for ‘n’: n = read $ concat . lines s :: Integer

/home/coleman/Git/euler.hs/008.hs:3:27: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines s’
      In the second argument of ‘($)’, namely ‘concat . lines s’
      In the expression: read $ concat . lines s :: Integer
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:18: error:
    • Couldn't match type ‘a0 -> [a1]’ with ‘[Char]’
      Expected type: String
        Actual type: a0 -> [a1]
    • Probable cause: ‘(.)’ is applied to too few arguments
      In the second argument of ‘($)’, namely ‘concat . lines s’
      In the expression: read $ concat . lines s :: Integer
      In an equation for ‘n’: n = read $ concat . lines s :: Integer

/home/coleman/Git/euler.hs/008.hs:3:27: error:
    • Couldn't match expected type ‘a0 -> t0 [a1]’
                  with actual type ‘[String]’
    • Possible cause: ‘lines’ is applied to too many arguments
      In the second argument of ‘(.)’, namely ‘lines s’
      In the second argument of ‘($)’, namely ‘concat . lines s’
      In the expression: read $ concat . lines s :: Integer
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:16: error:
    • Couldn't match type ‘t0 [a0] -> [a0]’ with ‘[Char]’
      Expected type: String
        Actual type: t0 [a0] -> [a0]
    • Probable cause: ‘concat’ is applied to too few arguments
      In the first argument of ‘read’, namely ‘concat’
      In the expression: read concat
      In the expression: read concat $ lines s :: Integer
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )

/home/coleman/Git/euler.hs/008.hs:3:16: error:
    • Couldn't match type ‘t0 [a0] -> [a0]’ with ‘[Char]’
      Expected type: String
        Actual type: t0 [a0] -> [a0]
    • Probable cause: ‘concat’ is applied to too few arguments
      In the first argument of ‘read’, namely ‘concat’
      In the expression: read concat
      In the expression: read concat $ lines s :: Integer
Failed, modules loaded: none.
Prelude> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> :load "/home/coleman/Git/euler.hs/008.hs"
[1 of 1] Compiling Main             ( /home/coleman/Git/euler.hs/008.hs, interpreted )
Ok, modules loaded: Main.
*Main> :main

*Main> partition [1,2,3,4] [2,3,4,5]

<interactive>:318:1: error:
    Variable not in scope: partition :: [Integer] -> [Integer] -> t
*Main> import Data.List
*Main Data.List> partition [1,2,3,4] [2,3,4,5]

<interactive>:320:11: error:
    • Couldn't match expected type ‘a -> Bool’
                  with actual type ‘[Integer]’
    • In the first argument of ‘partition’, namely ‘[1, 2, 3, 4]’
      In the expression: partition [1, 2, 3, 4] [2, 3, 4, 5]
      In an equation for ‘it’:
          it = partition [1, 2, 3, ....] [2, 3, 4, ....]
    • Relevant bindings include
        it :: ([a], [a]) (bound at <interactive>:320:1)
*Main Data.List> chunksOf

<interactive>:321:1: error: Variable not in scope: chunksOf
*Main Data.List> import Data.List.Split

<no location info>: error:
    Could not find module ‘Data.List.Split’
    It is not a module in the current program, or in any known package.
*Main Data.List> import Data.List.Split

<no location info>: error:
    Could not find module ‘Data.List.Split’
    It is not a module in the current program, or in any known package.
*Main Data.List> import Data.List.Split

<no location info>: error:
    Could not find module ‘Data.List.Split’
    It is not a module in the current program, or in any known package.
*Main Data.List> 